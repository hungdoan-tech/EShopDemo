@model Spice.Models.ViewModels.MenuItemsAndQuantity
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Product Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<head>
    <style>
        html {
            scroll-behavior: smooth;
        }

        .be-comment-block {
            margin-bottom: 50px !important;
            border: 1px solid #edeff2;
            border-radius: 2px;
            padding: 50px 70px;
            border: 1px solid #ffffff;
        }

        .comments-title {
            font-size: 16px;
            color: #262626;
            margin-bottom: 15px;
            font-family: 'Conv_helveticaneuecyr-bold';
        }

        .be-img-comment {
            width: 60px;
            height: 60px;
            float: left;
            margin-bottom: 15px;
        }

        .be-ava-comment {
            width: 60px;
            height: 60px;
            border-radius: 50%;
        }

        .be-comment-content {
            margin-left: 80px;
        }

            .be-comment-content span {
                display: inline-block;
                width: 49%;
                margin-bottom: 15px;
            }

        .be-comment-name {
            font-size: 13px;
            font-family: 'Conv_helveticaneuecyr-bold';
        }

        .be-comment-content a {
            color: #383b43;
        }

        .be-comment-content span {
            display: inline-block;
            width: 49%;
            margin-bottom: 15px;
        }

        .be-comment-time {
            text-align: right;
        }

        .be-comment-time {
            font-size: 11px;
            color: #b4b7c1;
        }

        .be-comment-text {
            font-size: 13px;
            line-height: 18px;
            color: #7a8192;
            display: block;
            background: #f6f6f7;
            border: 1px solid #edeff2;
            padding: 15px 20px 20px 20px;
        }

        .form-group.fl_icon .icon {
            position: absolute;
            top: 1px;
            left: 16px;
            width: 48px;
            height: 48px;
            background: #f6f6f7;
            color: #b5b8c2;
            text-align: center;
            line-height: 50px;
            -webkit-border-top-left-radius: 2px;
            -webkit-border-bottom-left-radius: 2px;
            -moz-border-radius-topleft: 2px;
            -moz-border-radius-bottomleft: 2px;
            border-top-left-radius: 2px;
            border-bottom-left-radius: 2px;
        }

        .form-group .form-input {
            font-size: 13px;
            line-height: 50px;
            font-weight: 400;
            color: #b4b7c1;
            width: 100%;
            height: 50px;
            padding-left: 20px;
            padding-right: 20px;
            border: 1px solid #edeff2;
            border-radius: 3px;
        }

        .form-group.fl_icon .form-input {
            padding-left: 70px;
        }

        .form-group textarea.form-input {
            height: 150px;
        }

        .image-container .result {
            border: 1px solid black;
            visibility: hidden;
            position: absolute;
            width: 500px;
            height: 500px;
            top: 0px;
            left: 410px;
            transition: opacity 0.5s linear;
            padding: 10px;
            z-index: 999;
        }

        .image-container {
            position: relative;
            display: inline;
        }

        .lens {
            position: absolute;
            border: 1px solid transparent;
            width: 150px;
            height: 150px;
        }

            .lens:hover {
                cursor: zoom-in;
            }

        .image {
            width: 400px;
            height: 400px;
        }

        table .progress {
            width: 200px;
            height: 25px;
            background-color: transparent;
        }

        table td {
            padding: 8px;
        }

        .total-rate {
            font-size: 250%;
        }

        .total-rate-number {
            margin: auto;
        }

        i {
            cursor: pointer;
        }

        .row {
            padding: 10px;
        }

        textarea {
            resize: none;
        }

        .rating-star-container {
            font-size: 150%;
        }

        .rating-submit {
            margin-bottom: 0px;
            width: 100%;
            background: rgb(89, 118, 229);
        }

        .news-readmore {
            overflow: visible;
            height: 100%;
            width: 100%;
        }

        .news-readless {
            overflow: hidden;
            height: 270px;
        }

        .btn-readnews {
            cursor: pointer;
            border: none;
            background: transparent;
            display: flex;
            justify-content: space-between;
            margin: auto;
        }

        .readnews-container {
            position: relative;
            display: inline-block;
            width: 100%;
            height: 200%;
            background: linear-gradient(transparent,white);
            border-radius: 10px;
        }

        .readnews-more-container {
            margin: -100px 0px 20px 0px;
            padding-top: 150px;
            padding-bottom: 20px;
        }

        .readless-more-container {
            margin: 0px 0px 20px 0px;
            padding-top: 50px;
            padding-bottom: 20px;
        }

        .btn-readnews:hover p,
        .btn-readnews:hover i {
            color: lightgray;
        }

        .btn-readnews i {
            margin: 5px 0px 0px 0px;
        }

        .news-content {
            width: 100%;
        }

        progress {
            width: 100%;
            height: 100%;
        }

        .favorit-items .fa {
            font-size: 30px;
        }

        .information .row {
            padding: 0px;
            margin: 0px;
        }

        .product-details {
            margin-bottom: 100px;
        }

        .trans-rating:hover {
            cursor: pointer;
            background-color: #edeff2;
            border-radius: 10px;
        }

        .favorit-items i {
            color: red;
        }
        .similar {
            position: relative;
        }
        .similar .card-body{
            bottom: 0px;
        }
        .similar:hover img {
            transition: all 0.2s linear;
            transform: scale(1.2);
            opacity: 0.3;
        }
        .similar:hover .card-body{
            visibility: visible;
        }
        .similar{
            transition: all 0.5s linear;
            overflow:hidden;
        }
        .similar .card-body {
            visibility: hidden;
        }
    </style>
</head>

<form id="myform" method="post">
    <div class="product-details">
        <div class="row">
            <aside class="col-xl-2 col-lg-1"></aside>
            <aside class="col-xl-3 col-lg-5">
                <article class="gallery-wrap">
                    <div class="img-big-wrap">
                        <div class="image-container">
                            <p>
                                <img id="myImage" class="image" src="@Model.Item.Image" width="100%" />
                                <div id="myResult" class="result"></div>
                            </p>
                        </div>
                    </div> <!-- slider-product.// -->
                </article> <!-- gallery-wrap .end// -->
            </aside>
            <aside class="col-xl-5 col-12">
                <article class="card-body p-5">
                    <div class="row title mb-3">
                        <h3 class="ml-lg-0 col-md-6">@Model.Item.Name</h3>
                        <div class="col-md-4 trans-rating">
                            <p>Rating this product:</p>
                            <i class="fa fa-star-o" aria-hidden="true"></i>
                            <i class="fa fa-star-o" aria-hidden="true"></i>
                            <i class="fa fa-star-o" aria-hidden="true"></i>
                            <i class="fa fa-star-o" aria-hidden="true"></i>
                            <i class="fa fa-star-o" aria-hidden="true"></i>
                        </div>
                        <div class="favorit-items col-md-1">
                            <a href="/Home/FavoriteProductConfirm/@Model.Item.Id">
                                @if (Model.FavoritedProduct.ItemId == 0)
                                {
                                    <i class="fa fa-heart-o" aria-hidden="true"></i>
                                }
                                else
                                {
                                    <i class="fa fa-heart" aria-hidden="true"></i>
                                }
                            </a>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-6 col-xl-5 ">
                            <div class="row" style="padding-bottom:0px">
                                <div class="col-lg-12">
                                    <p class="price-detail-wrap">
                                        <span class="price h3 text-warning">
                                            <span class="currency"></span><span class="num">$ @Model.Item.Price</span>
                                        </span>
                                    </p>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-7 col-6">
                                    <dl>
                                        <dt>Product Code: </dt>
                                    </dl>
                                </div>
                                <div class="col-lg-4 col-4">
                                    <dl>
                                        <dd>No. @Model.Item.Id</dd>
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xl-6 col-lg-4 col-3 col-sm-3">
                                    <dl>
                                        <dt>Color: </dt>
                                    </dl>
                                </div>
                                <div class="col-lg-5 col-3 col-sm-3">
                                    <dl>
                                        @if (ViewBag.itemColor != null)
                                        {
                                            <dd>@ViewBag.itemColor</dd>
                                        }
                                        else
                                        {
                                            <dd>N/A</dd>
                                        }
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xl-6 col-lg-4 col-5 col-sm-3">
                                    <dl>
                                        <dt>Category: </dt>
                                    </dl>
                                </div>
                                <div class="col-lg-5 col-4 col-sm-3">
                                    <dl>
                                        <dd>@Model.Item.Category.Name</dd>
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-xl-6 col-lg-4 col-3">
                                    <dl>
                                        <dt>Brand: </dt>
                                    </dl>
                                </div>
                                <div class="col-lg-5 col-3">
                                    <dl>
                                        <dd>@Model.Item.SubCategory.Name</dd>
                                    </dl>
                                </div>
                            </div>


                        </div>
                        <div class=" col-sm-1 col-xl-1"></div>
                        <div class="col-lg-5 col-sm-5 col-md-5 col-xl-6 infomation">
                            <div class="row">
                                <div class="col-lg-4 col-xl-3">
                                    <dl>
                                        <dt style="font-size:25px;">Information</dt>
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-2 col-xl-3">
                                    <dl>
                                        <dt>Band: </dt>
                                    </dl>
                                </div>
                                <div class="col-xl-1 col-2"></div>
                                <div class="col-lg-6 col-2">
                                    <dl>
                                        <dd>@Model.Item.Band</dd>
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-2 col-xl-3">
                                    <dl>
                                        <dt>Crystal: </dt>
                                    </dl>
                                </div>
                                <div class="col-xl-1 col-2"></div>
                                <div class="col-lg-6 col-2">
                                    <dl>
                                        <dd>@Model.Item.Crystal</dd>
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-2 col-xl-3">
                                    <dl>
                                        <dt>Size: </dt>
                                    </dl>
                                </div>
                                <div class="col-xl-1 col-2"></div>
                                <div class="col-lg-6 col-2">
                                    <dl>
                                        <dd>@Model.Item.Size</dd>
                                    </dl>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4 col-2 col-xl-3">
                                    <dl>
                                        <dt>Thickness: </dt>
                                    </dl>
                                </div>
                                <div class="col-xl-1 col-2"></div>
                                <div class="col-lg-6 col-2">
                                    <dl>
                                        <dd>@Model.Item.Thickness mm</dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-5 col-2">
                            <!-- price-detail-wrap .// -->
                            <dl>
                                <dt>Description</dt>
                            </dl>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12 col-12">
                            <dl>
                                <dd>
                                    <p>@Html.Raw(Model.Item.Description)</p>
                                </dd>
                            </dl>
                        </div>
                    </div>
                    <div class="row" style="visibility:hidden; position: absolute">
                        <div class="col-sm-5">
                            <dl class="param param-inline">
                                <dt>Quantity: </dt>
                                <dd>
                                    <input asp-for="Quantity" class="form-control" value="1" />
                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                </dd>
                            </dl>  <!-- item-property .// -->
                        </div> <!-- col.// -->
                        <div class="col-sm-7">
                            <dl class="param param-inline">
                            </dl>  <!-- item-property .// -->
                        </div> <!-- col.// -->
                    </div> <!-- row.// -->
                    <hr>
                    <button type="submit" value="Add to Cart" class="btn btn-primary form-control col-xl-6">Adding to cart</button>
                </article> <!-- card-body.// -->
            </aside> <!-- col.// -->

        </div> <!-- row.// -->
    </div> <!-- card.// -->
    <input id="itemId" asp-for="Item.Id" hidden />
    <!--container.//-->
    @if (Model.News != null)
    {
        <div class="container grid ">
            <div class="row">
                <div class="col-lg-12">
                    <div>
                        <h1>@Html.Raw(Model.News.Header)</h1>
                        <p style="color:gray;font-size:14px">@Html.Raw(Model.News.PublishedDate.ToLongDateString())</p>
                        <div class="col-12 news-content">
                            @Html.Raw(Model.News.Content)
                        </div>
                        <div class="readnews-container">
                            <button type="button" class="btn-readnews">
                                <i aria-hidden="true"></i>&nbsp;
                                <p></p>
                            </button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    }

</form>
<form asp-action="CreateRating" method="get">
    <div class="container grid">
        <h1 class="trans-rating-for">Rating and Reviews</h1>
        <div class="row">
            <div class="col-lg-3 total-rate">
                <div class="total-rate-number">@Model.ProductStar.averageStar /5</div>
                <div class="choose-star">
                    @for (int i = 1; i <= Model.ProductStar.averageStar; i++)
                    {
                        <i class="fa fa-star" id="@i-star" aria-hidden="true"></i>
                    }
                    @for (int j = 1; j <= 5 - Model.ProductStar.averageStar; j++)
                    {
                        <i class="fa fa-star-o" id="@j-star" aria-hidden="true"></i>
                    }
                </div>
            </div>
            <div class="col-lg-5">
                <table>
                    <tr>
                        <th></th>
                        <th></th>
                    </tr>
                    @for (int i = 5; i > 0; i--)
                    {
                        <tr class="@i-star result">
                            <td>
                                @for (int j = 5; j > 5 - i; j--)
                                {
                                    <i class="fa fa-star @j-star" aria-hidden="true" id="@j"></i>
                                }
                                @for (int k = 5 - i; k > 0; k--)
                                {
                                    <i class="fa fa-star-o @k-star" aria-hidden="true" id="@k"></i>
                                }
                            </td>
                            <td>
                                <div class="progress">
                                    @if (i == 5)
                                    {
                                        <progress max="20" value="@Model.ProductStar.totalFiveStar"></progress>
                                    }
                                    @if (i == 4)
                                    {
                                        <progress max="20" value="@Model.ProductStar.totalFourStar"></progress>
                                    }
                                    @if (i == 3)
                                    {
                                        <progress max="20" value="@Model.ProductStar.totalThreeStar"></progress>
                                    }
                                    @if (i == 2)
                                    {
                                        <progress max="20" value="@Model.ProductStar.totalTwoStar"></progress>
                                    }
                                    @if (i == 1)
                                    {
                                        <progress max="20" value="@Model.ProductStar.totalOneStar"></progress>
                                    }
                                </div>
                            </td>
                            <td class="totalStar">
                                @if (i == 5)
                                {
                                    <p class="fiveStar">@Model.ProductStar.totalFiveStar</p>
                                }
                                @if (i == 4)
                                {
                                    <p class="fourStar">@Model.ProductStar.totalFourStar</p>
                                }
                                @if (i == 3)
                                {
                                    <p class="threeStar">@Model.ProductStar.totalThreeStar</p>
                                }
                                @if (i == 2)
                                {
                                    <p class="twoStar">@Model.ProductStar.totalTwoStar</p>
                                }
                                @if (i == 1)
                                {
                                    <p class="oneStar">@Model.ProductStar.totalOneStar</p>
                                }
                            </td>
                        </tr>
                    }
                    <tr>
                </table>

            </div>
        </div>
        <div class="row">
            <div class="col-lg-7">
                <label>Your comment</label>
                <textarea class="focus-rating-for" asp-for="CustomerRating.Comment" type="text" style="width: 100%" placeholder="Type your review this product"></textarea>
            </div>
        </div>
        <div class="row" style="visibility:hidden;position:absolute">
            <div class="col-2">
                <label asp-for="CustomerRating.PublishedDate" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <div>
                    <input id="today" type="datetime-local" asp-for="CustomerRating.PublishedDate" class="form-control" readonly />
                </div>
            </div>
        </div>
        <div>
            <input id="currentItem" asp-for="CustomerRating.MenuItemId" value="@Model.Item.Id" hidden />
        </div>
        <div class="row">
            <div class="col-lg-4">
                <label>Your rating</label>
                <div class="rating-star-container">
                    @for (int i = 1; i < 6; i++)
                    {
                        @if (i == 1)
                        {
                            <i class="fa fa-star rating" id="@i-star" aria-hidden="true"></i>
                        }
                        else
                        {
                            <i class="fa fa-star-o rating" id="@i-star" aria-hidden="true"></i>
                        }
                    }
                    <input type="hidden" asp-for="CustomerRating.RatingStar" class="result-rating-star" readonly />
                    <span asp-validation-for="CustomerRating.RatingStar" class="text-danger"></span>
                </div>
            </div>
            <div class="col-lg-3">
                <input type="submit" class="btn btn-primary form-control rating-submit" value="Send" />
            </div>
        </div>
    </div>
</form>
<br />
<div class="container">
    <div class="row">
        <div class="col-6">
            <h4>Recent rating from other customer</h4>
        </div>
        <div>
            <select name="menu1" id="menu1"> 
                <option value="0">All</option>
                <option value="5">5-star</option>
                <option value="4">4-star</option>
                <option value="3">3-star</option>
                <option value="2">2-star</option>
                <option value="1">1-star</option>
            </select>

        </div>
    </div>
    @foreach (var comment in Model.ExistedRatings)
    {
        <div class="row">
            <div class="be-comment col-lg-7">
                <div class="be-img-comment ">
                                @*<a href="blog-detail-2.html">
                        <img src="/assets/img/author/author_3.png" alt="" class="be-ava-comment">
                    </a>*@
                    <i class="fa fa-user-circle-o" aria-hidden="true" style="font-size:50px"></i>
                </div>
                <div class="be-comment-content">
                    <span class="be-comment-name">
                        <a href="blog-detail-2.html">@comment.ApplicationUser.Name</a>
                        @for (int i = 1; i <= comment.RatingStar; i++)
                        {
                            <i class="fa fa-star" id="@i-star" aria-hidden="true"></i>
                        }
                        @for (int j = 1; j <= 5 - comment.RatingStar; j++)
                        {
                            <i class="fa fa-star-o" id="@j-star" aria-hidden="true"></i>
                        }
                    </span>
                    <span class="be-comment-time">
                        <i class="fa fa-clock-o"></i>
                        @comment.PublishedDate
                    </span>
                    <p class="be-comment-text">
                        @comment.Comment
                    </p>
                </div>
            </div>
        </div>
    }
    <div class="col-7">
        <form method="get" class="tab-content">
            <div page-model="@Model.PagingInfo" page-classes-enabled="true" page-class="page-link"
                 page-class-normal="" page-class-selected="active btn-primary"
                 class="btn-group float-right">
            </div>
        </form>
    </div>
</div>

<br />
<br />
<br />
<div class="container">
    <h2 style="margin:0 20%">Some products you maybe like</h2>
    <div class="row">
        @foreach (MenuItem recommendProduct in Model.SimilarProducts)
        {

            <div class="col-lg-3 col-md-6">
                <div class="card similar">
                    <a asp-action="Details" asp-route-id="@recommendProduct.Id">
                        <img src="@recommendProduct.Image" alt="Avatar" style="width:100%; height:50%; margin:auto;">
                        <div class="card-body" style="margin:auto; position:absolute">
                            <h4 class="card-title">@recommendProduct.Name</h4>
                            <p class="card-text">@recommendProduct.Price $</p>
                            <p class="card-text">@recommendProduct.Description</p>
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>
</div>
<br />
<br />
<br />


@*<div class="card" style=" display: inline;">
        <img src="@tec.Image" alt="Avatar" style="width:10%">
        <div class="container">
            <h4><b>@tec.Name</b></h4>
            <p>@tec.Description</p>
        </div>
    </div>*@
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

<script>
    $('#myform').submit(async function (event) {

        event.preventDefault(); //this will prevent the default submit

        // your code here (But not asynchronous code such as Ajax because it does not wait for response and move to next line.)
        try {
            const itemId = $('#itemId').val()
            const quantityRaw = await fetch('/Customer/Home/CheckQuantity/' + itemId)
            let quantity = 0
            //Quantity product which customer wants to buy.
            const quantityCurrent = $('#Quantity').val()

            if (quantityRaw) {
                quantity = await quantityRaw.json()
            }

            if (quantity < 0 || quantityCurrent > quantity) {
                alert("Kho hàng không đủ để cung cấp số lượng sản phẩm này. Khách hàng vui lòng thông cảm")
            }
            else {
                $(this).unbind('submit').submit(); // continue the submit unbind preventDefault
            }

        }
        catch (err) {
            console.log(err)
        }
    })

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    //Zoom image of products
    function imageZoom(imageID, resultID) {
        var image, lens, result, cx, cy;
        //declare class
        image = document.getElementById(imageID);
        result = document.getElementById(resultID);

        //create lens
        lens = document.createElement("DIV");
        lens.classList.add("lens");
        //insert lens
        image.parentElement.insertBefore(lens, image);

        //calculate the ratio between result and lens
        cx = result.offsetWidth / lens.offsetWidth;
        cy = result.offsetHeight / lens.offsetHeight;

        //set background for div result
        result.style.backgroundImage = "url('" + image.src + "')";
        result.style.backgroundSize =
            image.width * cx + "px " + image.height * cy + "px";
        lens.addEventListener("mousemove", moveLens);
        image.addEventListener("mousemove", moveLens);

        lens.addEventListener("touchmove", moveLens);
        image.addEventListener("touchmove", moveLens);

        const imageMain = document.querySelector(".image-container");
        lens.addEventListener("mouseleave", leaveLens);
        image.addEventListener("mouseleave", leaveLens);

        lens.addEventListener("touchleave", leaveLens);
        image.addEventListener("touchleave", leaveLens);
        function leaveLens(e) {
            result.style.visibility = "hidden";
            lens.style.backgroundColor = "transparent";
            lens.style.opacity = 1;
            lens.style.borderColor = "transparent";
        }
        function moveLens(e) {
            var pos, x, y;
            e.preventDefault();
            pos = getCursorPos(e);

            //calculate pos of lens
            x = pos.x - lens.offsetWidth / 2;
            y = pos.y - lens.offsetHeight / 2;

            if (x > image.width - lens.offsetWidth) {
                x = image.width - lens.offsetWidth;
            }
            if (y > image.height - lens.offsetHeight) {
                y = image.height - lens.offsetHeight;
            }
            if (x < 0) {
                x = 0;
            }
            if (y < 0) {
                y = 0;
            }

            lens.style.top = y + "px";
            lens.style.left = x + "px";
            result.style.backgroundPosition =
                "-" + x * cx + "px -" + y * cy + "px";

            result.style.opacity = 1;
            lens.style.borderColor = "black";
            lens.style.backgroundColor = "white";
            result.style.visibility = "visible";
            lens.style.opacity = 0.3;
        }
        function getCursorPos(e) {
            var a,
                x = 0,
                y = 0;
            e = e || window.event;
            /*get the x and y positions of the image:*/
            a = image.getBoundingClientRect();
            /*calculate the cursor's x and y coordinates, relative to the image:*/
            x = e.pageX - a.left;
            y = e.pageY - a.top;
            /*consider any page scrolling:*/
            x = x - window.pageXOffset;
            y = y - window.pageYOffset;
            console.log(window.pageXOffset, window.pageYOffset);
            return { x: x, y: y };
        }
    }
    imageZoom("myImage", "myResult");


    ///////////////////////////////////////////////////////////////////////////////////////////////////////////

    //Choose star to rating products
    var all = document.querySelectorAll(".rating");
    const resultRatingStar = document.querySelector(".result-rating-star");
    console.log(all);
    var array = [...all];
    resultRatingStar.value = parseInt(1);
    const resultStar = array.map(function (item) {
        item.style.transition = "all .3s linear";
        item.addEventListener("mousemove", () => {
            item.className = "fa fa-star rating";
            array.map(function (smallerItem) {
                const a = parseInt(item.id);
                const b = parseInt(smallerItem.id);
                if (a >= b) {
                    smallerItem.className = "fa fa-star rating";
                    smallerItem.style.transform = "scale(1.3)";
                }
                else {
                    smallerItem.className = "fa fa-star-o rating";
                    smallerItem.style.transform = "scale(1)";
                }
            });
            resultRatingStar.value = parseInt(item.id);
            return item.id;
        });
    });

    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Read more news
    const btnReadMore = document.querySelector(".btn-readnews");
    const news = document.querySelector(".news-content");
    const caret = document.querySelector(".btn-readnews i");
    const text = document.querySelector(".btn-readnews p");
    const rnContainer = document.querySelector(".readnews-container");
    const body = document.querySelector("html");

    var x;
    if (news !== null && rnContainer !== null) {
        if (news.offsetHeight >= 270) {
            caret.className = "fa fa-caret-down";
            text.textContent = "Read More";
            news.classList.add("news-readless");
            rnContainer.classList.add("readnews-more-container");

            btnReadMore.addEventListener("click", (e) => {

                if (news.className.includes("news-readless")) {
                    news.classList.remove("news-readless");
                    news.classList.add("news-readmore");
                    caret.className = "fa fa-caret-up";
                    text.textContent = "Read Less";
                    rnContainer.classList.remove("readnews-more-container");
                    rnContainer.classList.add("readnews-less-container");

                    //calculate top of current position when clicking the button.
                    x = body.scrollTop;
                }
                else if (news.className.includes("news-readmore")) {
                    news.classList.remove("news-readmore");
                    news.classList.add("news-readless");
                    caret.className = "fa fa-caret-down";
                    text.textContent = "Read More";
                    rnContainer.classList.remove("readnews-less-container");
                    rnContainer.classList.add("readnews-more-container");
                    console.log(body.scrollTop);

                    //scroll back to the postion which was clicked before.
                    scrollTo(0, x);
                }
            })
        }
        else {
            rnContainer.remove("style");
            news.style.marginBottom = "50px";
        }
    }
    const setTime = () => {
        const now = new Date();

        const day = now.getDate();
        const min = now.getMinutes();
        const sec = now.getSeconds();
        const hour = now.getHours();
        const month = now.getMonth() + 1;
        const year = now.getFullYear();

        const nowTime = document.querySelector(".nowTime");
        const time = year +
            "-" +
            (month > 9 ? month : "0" + month) +
            "-" +
            (day > 9 ? day : "0" + day) +
            "T" +
            (hour > 9 ? hour : "0" + hour) +
            ":" +
            (min > 9 ? min : "0" + min) +
            ":" +
            (sec > 9 ? sec : "0" + sec);
        document.querySelector("#today").value = time;
    }
    setInterval(setTime, 1000);

    const menuItem = document.querySelector("#itemId");
    document.querySelector("#currentItem").value = menuItem.value;


    const transRating = document.querySelector(".trans-rating");
    const transRatingFor = document.querySelector(".trans-rating-for");
    const focusRatingfor = document.querySelector(".focus-rating-for");

    transRating.addEventListener("click", () => {
        var pos = transRatingFor.offsetTop - 270;
        focusRatingfor.focus();
        scrollTo(0, pos);

    });

    const favorHeart = document.querySelector(".favorit-items i");
    if (favorHeart.className === "fa fa-heart-o") {
        favorHeart.addEventListener("mousemove", () => {
            favorHeart.className = "fa fa-heart";
        });
        favorHeart.addEventListener("mouseleave", () => {
            favorHeart.className = "fa fa-heart-o";
        });
    }
    else {
        favorHeart.addEventListener("mousemove", () => {
            favorHeart.className = "fa fa-heart-o";
        });
        favorHeart.addEventListener("mouseleave", () => {
            favorHeart.className = "fa fa-heart";
        });
    }
    var urlmenu = document.getElementById('menu1');
    urlmenu.onchange = function () {
        change = this.options[this.selectedIndex].value;
        window.location.href = "?starNumber=" + this.options[this.selectedIndex].value + "&ratingPage=1";
    };

    const splitLocation = window.location.href.split("=");
    const resultNumber = splitLocation[1].charAt(0);
    for (var i = 0; i < urlmenu.length; i++) {
        if (urlmenu.options[i].value == resultNumber) {
            urlmenu.selectedIndex = i;
        }
    }
    
</script>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

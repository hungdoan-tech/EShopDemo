@model Spice.Models.ViewModels.MenuItemsAndQuantity
@using Spice.Extensions

@{
    ViewData["Title"] = "Product Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<form id="myform" method="post">
    <div>
        <div class="row">
            <aside class="col-sm-2"></aside>
            <aside class="col-sm-3">
                <article class="gallery-wrap">
                    <div class="img-big-wrap">
                        <div> <img src="@Model.Item.Image" width="100%" /></div>
                    </div> <!-- slider-product.// -->
                </article> <!-- gallery-wrap .end// -->
            </aside>
            <aside class="col-sm-7">
                <article class="card-body p-5">
                    <h3 class="title mb-3">@Model.Item.Name</h3>

                    <p class="price-detail-wrap">
                        <span class="price h3 text-warning">
                            <span class="currency"></span><span class="num">$ @Model.Item.Price</span>
                        </span>
                    </p> <!-- price-detail-wrap .// -->
                    <dl class="item-property">
                        <dt>Description</dt>
                        <dd>
                            <p>
                                @Html.Raw(Model.Item.Description)
                            </p>
                        </dd>
                    </dl>
                    <dl class="param param-feature">
                        <dt>Product Code</dt>
                        <dd>@Model.Item.Id</dd>
                    </dl>  <!-- item-property-hor .// -->
                    <dl class="param param-feature">
                        <dt>Color: </dt>
                        @*<select asp-for="Item.Color" readonly asp-items="Html.GetEnumSelectList<MenuItem.EColor>()" class="form-control"></select>*@
                        @if (ViewBag.itemColor != null)
                        {
                            <dd>
                                @ViewBag.itemColor
                            </dd>
                        }
                        else
                        {
                            <dd>
                                N/A
                            </dd>
                        }
                    </dl>  <!-- item-property-hor .// -->

                    <hr>
                    <div class="row">
                        <div class="col-sm-5">
                            <dl class="param param-inline">
                                <dt>Quantity: </dt>
                                <dd>
                                    <input asp-for="Quantity" class="form-control" />
                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                </dd>
                            </dl>  <!-- item-property .// -->
                        </div> <!-- col.// -->
                        <div class="col-sm-7">
                            <dl class="param param-inline">
                                @*<dt>Size: </dt>
                                    <dd>
                                        <label class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                            <span class="form-check-label">SM</span>
                                        </label>
                                        <label class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                            <span class="form-check-label">MD</span>
                                        </label>
                                        <label class="form-check form-check-inline">
                                            <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                                            <span class="form-check-label">XXL</span>
                                        </label>
                                    </dd>*@
                            </dl>  <!-- item-property .// -->
                        </div> <!-- col.// -->
                    </div> <!-- row.// -->
                    <hr>
                    <button type="submit" value="Add to Cart" class="btn btn-primary form-control">Adding to cart</button>
                </article> <!-- card-body.// -->
            </aside> <!-- col.// -->
        </div> <!-- row.// -->
    </div> <!-- card.// -->
    <input id="itemId" asp-for="Item.Id" hidden />
    <!--container.//-->
</form>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

<script>
    $('#myform').submit(async function (event) {

        event.preventDefault(); //this will prevent the default submit

        // your code here (But not asynchronous code such as Ajax because it does not wait for response and move to next line.)
        try {
            const itemId = $('#itemId').val()
            const quantityRaw = await fetch('/Customer/Home/CheckQuantity/' + itemId)
            let quantity = 0
            //Quantity product which customer wants to buy.
            const quantityCurrent = $('#Quantity').val()

            if (quantityRaw) {
                quantity = await quantityRaw.json()
            }

            if (quantity < 0 || quantityCurrent > quantity) {
                alert("Kho hàng không đủ để cung cấp số lượng sản phẩm này. Khách hàng vui lòng thông cảm")
            }
            else {
                $(this).unbind('submit').submit(); // continue the submit unbind preventDefault
            }

        }
        catch (err) {
            console.log(err)
        }
    })
</script>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

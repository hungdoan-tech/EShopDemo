@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@*<span class="flaticon-user"></span>*@
<style>
    .admin-container {
      margin-bottom: 0px;
    }

    .admin-hover-result {
        position: absolute;
        border-top: solid 3px red;
        box-shadow: .1px .1px .1px .1px #888888;
        border-radius: 10px 10px 0px 0px;
        padding: 30px 5px 10px 0px;
        z-index: 999;
        width: 150px;
        background-color: white;
        visibility: hidden;
    }
    .admin-hover-result a {
        margin-bottom: 100px;
        padding-left: 10px;
        visibility: hidden;
        transition: all .03s linear;
    }
    .admin-container:hover .admin-hover-result a {
        visibility: visible;
    }
    .admin-container:hover .admin-hover-result {
        visibility: visible;
        background-color: white;
    }
    .admin-hover-result a:hover {
        color: red;
        cursor: pointer;
    }
</style>
@if (SignInManager.IsSignedIn(User))
{
    <li class="admin-container">        
        <a class="black-link admin-hover" asp-area="Identity" asp-page="/Account/Manage/Index">@await Component.InvokeAsync("UserName") </a>
       <div class="admin-hover-result">
            <a asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a>
            <br />
            <br/>
            <a href="/Customer/Home/FavoriteProductIndex">Favorite Products</a>
        </div>  
    </li>
    <li>        
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="btn-logout black-link">Logout</button>
        </form>
    </li>
}
else
{
    <li>
        <a class="black-link" asp-area="Identity" asp-page="/Account/Register">Register </a>
    </li>
    <li>
        <a class="black-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
